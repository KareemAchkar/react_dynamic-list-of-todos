{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","activeTodo","onSelectTodo","className","map","todo","isActive","id","cn","completed","title","onClick","type","TodoFilter","onSelectOption","onSetSelectOption","onQuery","onSetQuery","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onCloseTab","useState","onLoadedUser","setOnLoaderUser","loadedUser","a","userId","useEffect","href","email","name","App","loadedTodos","setLoadedTodos","selectOption","setSelectOption","query","setQuery","selectedId","setSelectedId","loadWrapper","filteredTodos","filter","lowQuery","toLowerCase","includes","foundTodo","find","length","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.019e9bb9.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  activeTodo: number\n  onSelectTodo: (todoId: number) => void\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, activeTodo, onSelectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const isActive = todo.id === activeTodo;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={cn({\n              ' has-background-info-light': isActive,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className={cn(\n                  '',\n                  {\n                    'fas fa-check': todo.completed,\n                  },\n                )}\n\n                />\n              </span>\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                onClick={() => {\n                  onSelectTodo(todo.id);\n                }}\n                className=\"button\"\n                type=\"button\"\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  onSelectOption: string,\n  onSetSelectOption: (value: string) => void\n  onQuery: string,\n  onSetQuery: (value: string) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onSelectOption, onSetSelectOption, onQuery, onSetQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={onSelectOption}\n          onChange={(event) => {\n            onSetSelectOption(event.target.value);\n          }}\n        >\n          <option value=\"all\">All</option>\n\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={onQuery}\n        onChange={(event) => {\n          onSetQuery(event.target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {onQuery && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* s2al alaa , bhott && aw bhot if condition , fare2 ? */}\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n          />\n        </span>\n      )}\n\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo,\n  onCloseTab: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo, onCloseTab,\n}) => {\n  const [onLoadedUser, setOnLoaderUser] = useState<User | null>(null);\n\n  const loadedUser = async () => {\n    setOnLoaderUser(await getUser(todo.id));\n  };\n\n  useEffect(() => {\n    loadedUser();\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!onLoadedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo ${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onCloseTab();\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.completed\n                  ? 'Done'\n                  : 'Planned'}\n\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${onLoadedUser.email}`}>\n                {onLoadedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [loadedTodos, setLoadedTodos] = useState<Todo[]>([]);\n  const [selectOption, setSelectOption] = useState('All');\n  const [query, setQuery] = useState('');\n  const [selectedId, setSelectedId] = useState(0);\n\n  const selectTodo = (todoId: number) => {\n    setSelectedId(todoId);\n  };\n\n  const loadWrapper = async () => {\n    setLoadedTodos(await getTodos());\n  };\n\n  let filteredTodos = [...loadedTodos];\n\n  if (selectOption === 'completed') {\n    filteredTodos = filteredTodos.filter(todo => todo.completed);\n  }\n\n  if (selectOption === 'active') {\n    filteredTodos = filteredTodos.filter(todo => !todo.completed);\n  }\n\n  if (query) {\n    const lowQuery = query.toLowerCase();\n\n    filteredTodos = filteredTodos.filter(todo => todo.title.includes(lowQuery));\n  }\n\n  const foundTodo = loadedTodos.find(todo => todo.id === selectedId) as Todo;\n\n  const closeTab = () => {\n    setSelectedId(0);\n  };\n\n  useEffect(() => {\n    loadWrapper();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onSelectOption={selectOption}\n                onSetSelectOption={setSelectOption}\n                onQuery={query}\n                onSetQuery={setQuery}\n\n              />\n            </div>\n\n            <div className=\"block\">\n              {loadedTodos.length === 0\n                ? (<Loader />)\n                : (\n\n                  <TodoList\n                    todos={filteredTodos}\n                    activeTodo={selectedId}\n                    onSelectTodo={selectTodo}\n                  />\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedId && (\n        <TodoModal\n          todo={foundTodo}\n          onCloseTab={closeTab}\n\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}